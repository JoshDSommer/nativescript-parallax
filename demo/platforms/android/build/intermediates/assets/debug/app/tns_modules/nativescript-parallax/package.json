{
  "name": "nativescript-parallax",
  "version": "1.0.0",
  "description": "NativeScript Parallax View Plugin.",
  "main": "nativescript-parallax.js",
  "nativescript": {
    "platforms": {
      "android": "1.7.0",
      "ios": "1.7.0"
    }
  },
  "scripts": {
    "build": "tsc",
    "demo.ios": "npm run preparedemo &&  cd demo &&  tns emulate ios",
    "demo.android": "npm run preparedemo &&  cd demo &&  tns run android",
    "preparedemo": "npm run build &&  cd demo &&  tns plugin remove nativescript-parallax &&  tns plugin add .. &&  tns install",
    "setup": "cd demo &&  npm install &&  cd .. &&  npm run build &&  cd demo &&  tns plugin add .. &&  cd .."
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TheOriginalJosh/nativescript-parallax.git"
  },
  "keywords": [
    "NativeScript",
    "JavaScript",
    "Android",
    "iOS"
  ],
  "author": {
    "name": "Your Name",
    "email": "youremail@yourdomain.com"
  },
  "bugs": {
    "url": "https://github.com/TheOriginalJosh/nativescript-parallax/issues"
  },
  "license": "MIT",
  "homepage": "https://github.com/TheOriginalJosh/nativescript-parallax",
  "readmeFilename": "README.md",
  "devDependencies": {
    "typescript": "^1.8.7"
  },
  "readme": "# Develop a NativeScript plugin now (w/ TypeScript)\n\n## Getting started\n\n1. Download a zip of this seed.\n2. `npm install -g typescript`\n3. `cd ... path/to/unzip/folder ...`\n2. `npm run setup`\n3. Get to work.\n\nThis seed expands on several things [presented here](http://developer.telerik.com/featured/creating-nativescript-plugins-in-typescript/).\n\n## Usage\n\nThe seed is prepared to allow you to test and try out your plugin via the `demo` folder.\nAdditionally it provides a proper `.gitignore` to keep GitHub tidy as well as `.npmignore` to ensure everyone is happy when you publish your plugin via npm.\n\n### Prepare\n\nYou'll want to change a couple things right away:\n\n* Change the name of the plugin all throughout `package.json` (including github repo, etc.) and the filenames.\n* Also in `package.json`, find this line:\n\n```\n\"preparedemo\": \"npm run build; cd demo; tns plugin remove nativescript-yourplugin; tns plugin add ..; tns install\",\n```\n\nReplace `nativescript-yourplugin` with your actual plugin name.\n\n### Typical development workflow:\n\n1. Make changes to plugin files\n2. Make changes in `demo` that would test those changes out\n3. `npm run demo.ios` or `npm run demo.android`  **(must be run from the root directory)**\n\nThose `demo` tasks are just general helpers. You may want to have more granular control on the device and/or emulator you want to run. For that, you can just run things the manual way:\n\n```\ncd demo\n\n// when developing, to ensure the latest code is built into the demo, it's a gaurantee to remove the plugin and add it back\ntns plugin remove nativescript-yourplugin // replace with your plugin name\ntns plugin add ..\n\n// manual platform adds\ntns platform add ios\n// and/or\ntns platform add android\n```\n\nThen use any of the available options from the `tns` command line:\n\n* [Emulate your project](https://github.com/NativeScript/nativescript-cli#emulate-your-project)\n* [Run your project](https://github.com/NativeScript/nativescript-cli#run-your-project)\n* [Full list of commands](https://github.com/NativeScript/nativescript-cli#the-commands)\n\n## Publish\n\nWhen you have everything ready to publish:\n\n* Bump the version number in `package.json`\n* `npm run build` - **very important** - ensure the latest is built **before** you publish\n* `npm publish`\n\n## Contributing - Want to make the seed better?\n\nOr at least help keep it up to date with NativeScript releases, which would be excellent.\n\n```\nnpm install -g typescript  // if you don't already have it\ngit clone https://github.com/NathanWalker/nativescript-plugin-seed\ncd nativescript-plugin-seed\n\n// Improve!\n```\n",
  "_id": "nativescript-parallax@1.0.0",
  "_shasum": "5be305044cd99aa3446136cc11159165e23636d7",
  "_from": "..",
  "_resolved": "file:.."
}
